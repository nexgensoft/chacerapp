syntax = "proto3";

package chacerapp.v1;

import "chacerapp/iam/v1/annotations.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Chacerapp.V1";
option go_package = "github.com/chacerapp/apiserver/server/serverpb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.chacerapp.v1";
option php_namespace = "Chacerapp\\V1";

// Provides a service to manage rooms
service Rooms {
  // ListRooms will list all of the rooms in a location on an account.
  //
  // An empty result will be returned when the location or account does not
  // exist or if no rooms exist in the location on the account.
  rpc ListRooms(ListRoomsRequest) returns (ListRoomsResponse) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.rooms.list";
    option (google.api.method_signature) = "parent";
    option (google.api.http) = {
      get: "/v1/{parent=accounts/*/locations/*}/rooms"
    };
  }

  // CreateRoom will create a new room in a location on an account.
  //
  // A NotFound error will be returned when the account or location that
  // was requested to be in does not exist. A ResourceExhausted error will
  // be returned when the account has reached its max number of rooms.
  rpc CreateRoom(CreateRoomRequest) returns (Room) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.rooms.create";
    option (google.api.method_signature) = "parent,room,room_id";
    option (google.api.http) = {
      post: "/v1/{parent=accounts/*/locations/*}/rooms",
      body: "room"
    };
  }

  // UpdateRoom will update the properties of a room
  //
  // A NotFound error will be returned when a room does not exist.
  rpc UpdateRoom(UpdateRoomRequest) returns (Room) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.rooms.update";
    option (google.api.method_signature) = "room,update_mask";
    option (google.api.http) = {
      patch: "/v1/{room.name=accounts/*/locations/*/rooms/*}"
      body: "room"
    };
  }

  // GetRoom will retrieve an individual location for an account.
  //
  // A NotFound error will be returned when a room does not exist.
  rpc GetRoom(GetRoomRequest) returns (Room) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.rooms.get";
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      get: "/v1/{name=accounts/*/locations/*/rooms/*}"
    };
  }

  // DeleteRoom will delete a location from an account.
  //
  // A NotFound error will be returned if the account or location does
  // not exist. A FailedPrecondition error will be returned when rooms
  // still exist for a location. To delete a location, fist delete all
  // rooms for the location. This operation cannot be undone.
  rpc DeleteRoom(DeleteRoomRequest) returns (google.protobuf.Empty) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.rooms.delete";
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      delete: "/v1/{name=accounts/*/locations/*/rooms/*}"
    };
  }
}

// A room within a location where contact can be requested.
message Room {
  option (google.api.resource) = {
    type: "apis.chacerapp.com/Room",
    plural: "rooms",
    singular: "room",
    pattern: "accounts/{account}/locations/{location}/rooms/{room}",
  };

  // The name of the resource.
  //
  // Example: accounts/joes-accounts-efb2e
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The name that should be used when displaying the account.
  //
  // Example: Joe's Account
  //
  // This value should be at most 64 characters.
  string display_name = 2 [(google.api.field_behavior) = REQUIRED];

  // A human friendly description of this room.
  string description = 3;

  // Arbitrary key/value pairs that can be used to classify or
  // tag a resource.
  //
  // Example: "city" = "dallas"
  //
  // Each label value is restricted to be at most 64 characters in
  // length and must only contain the characters a-z, A-Z, 0-9, -,
  // _, or space. The value must be a non-empty value and must not
  // start or end in spaces.
  map<string, string> labels = 4;

  // Annotations are key/value pairs that can be used to hold configuration
  // data related to third party integrations and may also contain configuration
  // when working with different version of the same data model.
  //
  // Example: "example-integration.com/" = ""
  //
  // Annotations are not well documented resources and will have a shorter
  // deprecation cycle than fields defined on a resource.
  map<string, string> annotations = 5;

  // Server-defined URL for the resource.
  string self_link = 100 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A unique identifer for the resource.
  string uid = 101 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time the account was created.
  google.protobuf.Timestamp create_time = 102 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time the account was updated.
  google.protobuf.Timestamp update_time = 103 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time of when the account was requested to be deleted.
  google.protobuf.Timestamp delete_time = 104 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// List the rooms in a parent.
message ListRoomsRequest {
  // The parent (account) where the rooms will be listed
  // Specified in the format 'accounts/*/locations/*'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "apis.chacerapp.com/Location"
  ];

  // The max number of results per page that should be returned. If the number
  // of available results is larger than `page_size`, a `next_page_token` is
  // returned which can be used to get the next page of results in subsequent
  // requests. Acceptable values are 1 to 500, inclusive. (Default: 500)
  int32 page_size = 2;

  // Specifies a page token to use. Set this to the nextPageToken returned by
  // previous list requests to get the next page of results.
  string page_token = 3;
}

// ListRoomsResponse will list the rooms for an account.
message ListRoomsResponse {
  // A list of rooms in the specified account.
  repeated Room rooms = 1;

  // This token allows you to get the next page of results for list requests.
  // If the number of results is larger than `page_size`, use the
  // `next_page_token` as a value for the query parameter `page_token` in the
  // next request. The value will become empty when there are no more pages.
  string next_page_token = 2;
}

// CreateRoomRequest will create a new room.
message CreateRoomRequest {
  // The parent (account) where the room will be created.
  // Specified in the format 'accounts/*/locations/*'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "apis.chacerapp.com/Location"
  ];

  // The room that should be created.
  Room room = 2 [(google.api.field_behavior) = REQUIRED];

  // The ID that should be used as the resource ID of the room.
  string room_id = 3;
}

// UpdateRoomRequest will update an existing room.
message UpdateRoomRequest {
  // The room resource that should replace the one present on the server.
  Room room = 1 [(google.api.field_behavior) = REQUIRED];

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

// GetRoomRequest retrieves a room for an account.
message GetRoomRequest {
  // The name (account and room) of the room to get.
  // Specified in the format 'accounts/*/locations/*/rooms/*'.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "apis.chacerapp.com/Room"
  ];
}

// DeleteRoomRequest deletes a room from an account.
message DeleteRoomRequest {
  // The name (account and location) of the room to delete.
  // Specified in the format 'accounts/*/locations/*/rooms/*'.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "apis.chacerapp.com/Room"
  ];
}
