syntax = "proto3";

package chacerapp.v1;

import "chacerapp/v1/accounts.proto";
import "chacerapp/iam/v1/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Chacerapp.V1";
option go_package = "github.com/chacerapp/apiserver/server/serverpb";
option java_multiple_files = true;
option java_outer_classname = "ContactsProto";
option java_package = "com.chacerapp.v1";
option php_namespace = "Chacerapp\\V1";

// Contacts provides a service for managing contacts
service Contacts {
  // ListContacts will retrieve a list of contacts
  //
  // An empty result will be returned when no contacts exist.
  rpc ListContacts(ListContactsRequest) returns (ListContactsResponse) {
    option (google.api.method_signature) = "parent";
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.contacts.list";
    option (google.api.http) = {
      get: "/v1/{parent=accounts/*}/contacts"
    };
  }

  // CreateContact will create a new contact
  //
  // An AlreadyExists error will be returned when the resulting contact's
  // resource name conflicts with an existing contact.
  rpc CreateContact(CreateContactRequest) returns (Contact) {
    option (google.api.method_signature) = "contact,contact_id";
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.contacts.create";
    option (google.api.http) = {
      post: "/v1/{parent=accounts/*}/contacts",
      body: "contact"
    };
  }

  // GetContact will retrieve an contact
  //
  // A NotFound error will be returned when an contact does not exist.
  rpc GetContact(GetContactRequest) returns (Contact) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.contacts.get";
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      get: "/v1/{name=accounts/*/contacts/*}"
    };
  }

  // UpdateContact will update an contact
  //
  // This endpoint will return a NotFound error when the provided
  // contact does not exist.
  rpc UpdateContact(UpdateContactRequest) returns (Contact) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.contacts.update";
    option (google.api.method_signature) = "contact,update_mask";
    option (google.api.http) = {
      patch: "/v1/{contact.name=contacts/*}",
      body: "contact"
    };
  }

  // DeleteContact will delete an contact from the system.
  //
  // This operation can not be reversed. Once an contact has been deleted,
  // all data associated with that contact will also be deleted. A NotFound
  // error will be returned when an contact could not be found.
  rpc DeleteContact(DeleteContactRequest) returns (Contact) {
    option (chacerapp.iam.v1.required_permissions) = "resourcemanager.contacts.delete";
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      delete: "/v1/{name=accounts/*/contacts/*}"
    };
  }
}

// Represents an contact in the platform
//
// A contact can be used to represent a recipient for a message.
message Contact {
  option (google.api.resource) = {
    type: "chacerappapis.com/Contact",
    plural: "contacts",
    singular: "contact",
    pattern: "contacts/{contact}",
  };

  // The name of the resource.
  //
  // Example: accounts/joes-account-e4knw/contacts/joe-smith-3j3nm
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The name that should be used when displaying the contact.
  //
  // Example: Joe Smith
  //
  // This value should be at most 64 characters and must be unique within
  // the parent of the contact.
  string display_name = 2 [
    (google.api.field_behavior) = REQUIRED
  ];

  // Arbitrary key/value pairs that can be used to classify or
  // tag a resource.
  //
  // Example: "city" = "dallas"
  //
  // Each label value is restricted to be at most 64 characters in
  // length and must only contain the characters a-z, A-Z, 0-9, -,
  // _, or space. The value must be a non-empty value and must not
  // start or end in spaces.
  map<string, string> labels = 5;

  // Annotations are key/value pairs that can be used to hold configuration
  // data related to third party integrations and may also contain configuration
  // when working with different version of the same data model.
  //
  // Example: "example-integration.com/" = ""
  //
  // Annotations are not well documented resources and will have a shorter
  // deprecation cycle than fields defined on a resource.
  map<string, string> annotations = 6;

  // Server-defined URL for the resource.
  string self_link = 100 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A unique identifer for the resource.
  string uid = 101 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time the contact was created.
  google.protobuf.Timestamp create_time = 102 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time the contact was updated.
  google.protobuf.Timestamp update_time = 103 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time of when the contact was requested to be deleted.
  google.protobuf.Timestamp delete_time = 104 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListContactsRequest will return a paginated list of contacts.
message ListContactsRequest {
  // The parent of the contact.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "chacerappapis.com/Contact"
    }
  ];

  // The max number of results per page that should be returned. If the number
  // of available results is larger than `page_size`, a `next_page_token` is
  // returned which can be used to get the next page of results in subsequent
  // requests. Acceptable values are 0 to 500, inclusive. (Default: 10)
  // The default value is used when a page_size of 0 is provided.
  int32 page_size = 2;

  // Specifies a page token to use. Set this to the nextPageToken returned by
  // previous list requests to get the next page of results.
  string page_token = 3;
}

// ListContactsResponse will list the contacts.
message ListContactsResponse {
  // A list of contacts.
  repeated Contact contacts = 1;

  // This token allows you to get the next page of results for list requests.
  // If the number of results is larger than `page_size`, use the
  // `next_page_token` as a value for the query parameter `page_token` in the
  // next request. The value will become empty when there are no more pages.
  string next_page_token = 2;
}

// CreateContactRequest will create a contact
message CreateContactRequest {
  // The parent that should be used for the contact.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "chacerappapis.com/Account"
  ];

  // The contact that should be created.
  Contact contact = 2 [(google.api.field_behavior) = REQUIRED];

  // The ID to use for the contact, which will become the final component of
  // the contacts's resource name.
  //
  // This value should be between 4 and 63 characters. Valid characters
  // are /[a-z][0-9]-/.
  string contact_id = 3;
}

// UpdateContactRequest will update the contact.
message UpdateContactRequest {
  // The contact that should be updated.
  Contact contact = 1;

  // The update mask that applies to the resource.
  google.protobuf.FieldMask update_mask = 2;
}

// GetContactRequest will get an contact.
message GetContactRequest {
  // The name of the contact to get.
  // Specified in the format 'contacts/*`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "chacerappapis.com/Contact"
  ];
}

// DeleteContactRequest will delete an contact.
message DeleteContactRequest {
  // The name of the contact to delete.
  // Specified in the format 'contacts/*`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "chacerappapis.com/Contact"
  ];
}
